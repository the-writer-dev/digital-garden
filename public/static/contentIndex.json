{"3.-Resources/Engineering/Frontend/FCP,-LCP,-and-TBT":{"title":"FCP, LCP, and TBT","links":["Inbox/Lazy-in-Nextjs"],"tags":["engineering","frontend"],"content":"FCP measures the time from when the page starts loading to when any part of the page’s content is rendered on the screen. This includes text, images, SVGs, and non-white canvas elements.\nLCP measures the time it takes for the largest content element visible in the viewport to load. Optimizing LCP involves improving the loading of the largest elements on the page, which often includes images, videos, and large blocks of text. Here are the key optimizations:\nHow to improve FCP, LCP\n\nCode splitting and lazy loading\n\nBy Lazy in Nextjs, you can reduce the initial bundle size. Smaller bundle size means the browser can download, parse, and execute the JavaScript code faster, leading to a quicker rendering of the largest contentful element.\n\nMinimize render-blocking resource\n\nUse Tailwind Css’s utility classes to avoid large Css files and reduce amount of blocking Css. See this article together nitropack.io/blog/post/eliminate-render-blocking-resources\n\nOptimize images\n\nUse next/image components for images\n\nMinimize third-party scripts\n\nMinimize the usage of external libraries and third-party scripts that can impact LCP.\n"},"3.-Resources/Engineering/Frontend/LightHouse":{"title":"LightHouse","links":[],"tags":["engineering","frontend"],"content":"You can use Chrome extension or this website lighthouse-metrics.com/ to run analysis of your website."},"3.-Resources/Engineering/Frontend/Next/Bundle-analyzer":{"title":"Bundle analyzer","links":[],"tags":["engineering","frontend","next"],"content":"How to configure bundle analyzer\nInstall the bundle analysis package.\nnpm install --save-dev @next/bundle-analyzer\nThen configure nextjs.config to use the package.\nconst withBundleAnalyzer = require(&#039;@next/bundle-analyzer&#039;)({ \nenabled: process.env.ANALYZE === &#039;true&#039;, \n}); \n \nmodule.exports = withBundleAnalyzer({ // Other Next.js configuration options here });\nRun ANALYZE=true npm run build and it will open up a new browser to show bundle analysis report.\nIt shows 3 different parts - node modules, edge, and client.\nInterpretation the output of the bundle analyzer\nEach rectangle represents a module or package. The size of a rectangle shows how large or tiny the module or package is compared to others.\n\nStat size: The size of the JavaScript bundle when served to the client; this is the size of the JavaScript code that the client’s web browser has to download and execute to run the app\nParsed size: The size of the bundle after the web browser has parsed it; this is the amount of memory that the JavaScript code takes up in the web browser after it has executed the code\nGzipped size: The size of the JavaScript bundle when compressed using the Gzip algorithm; this is the amount of data the client’s web browser must download to run the app. Gzip is a common compression algorithm used to reduce the size of web assets like JavaScript files. It can significantly reduce the amount of data transferred over the network.\n\nHow to use analyzer\nWith interpretation,\n\nFind large dependencies and look for alternatives\nFind duplicated code\nIdentify unused code → find unused import, export, variables, lines of code\n"},"3.-Resources/Engineering/Frontend/Next/Metadata-Object":{"title":"Metadata Object","links":[],"tags":["engineering","frontend","next"],"content":"Source: nextjs.org/docs/app/api-reference/functions/generate-metadata#opengraph\nimport { Metadata } from &#039;next&#039;\n \n// either Static metadata\nexport const metadata: Metadata = {\n  title: &#039;...&#039;,\n}\n \n// or Dynamic metadata\nexport async function generateMetadata({ params }) {\n  return {\n    title: &#039;...&#039;,\n  }\n}\n\nYou can do use this either in page or layout"},"3.-Resources/Engineering/Frontend/Optimization-of-website":{"title":"Optimization of website","links":["3.-Resources/Engineering/Frontend/LightHouse","3.-Resources/Engineering/Frontend/TTFB","3.-Resources/Engineering/Frontend/FCP,-LCP,-and-TBT","3.-Resources/Engineering/Frontend/Next/Bundle-analyzer"],"tags":["engineering","frontend"],"content":"Use LightHouse to analyze the performance of you website.\nSee TTFB and FCP, LCP, and TBT to get familiar with important performance metrics.\nThen read How to improve TTFB and How to improve FCP, LCP, and TBT to start optimizing your website. Use Bundle analyzer together as a reference."},"3.-Resources/Engineering/Frontend/TTFB":{"title":"TTFB","links":[],"tags":["engineering","frontend"],"content":"Time to First Byte (TTFB) is a metric that measures the time it takes for a user’s browser to receive the first byte of data from the server after making an HTTP request. It is an important component of web performance as it affects how quickly a website begins to load. \nWhy TTFB is important?\n\n\nUser Experience:\n\nA lower TTFB means that the server responds quickly, leading to faster page loads and better user experience.\n\n\n\nSEO:\n\nSearch engines like Google consider TTFB as a ranking factor. Faster websites tend to rank higher in search results.\n\n\n\nHow to improve TTFB?\n\nCDN\nA CDN stores copies of your content in multiple locations worldwide reducing the distance data has to travel\nDatabase\n\nIndex your database: proper indexing can speed up database queries\nOptimize queries: ensure your queries are efficient and avoid unnecessary data\nUse cache\n\nLocal storage (cache)\nLocal storage can reduce API calls\nOptimize Code\n\nOptimize your logic to reduce the time taken to process requests\nUse background jobs for tasks that don’t need to be processed synchronously\nMinimize Third-party requests\n"},"3.-Resources/Prompts-for-developers":{"title":"Prompts for developers","links":[],"tags":["engineering","ai"],"content":"The very first thing we have to figure out is the workflow you have and the find the bottleneck\nThe worst case you can use AI\nUse cases\nRegex is the perfect use case to use ChatGPT for developers. You don’t have to give pain to\nyour brain anymore :)"},"Attachment/Templates/OKR-template":{"title":"OKR template","links":[],"tags":["template"],"content":"Objective\n\nSet up3-5 high level, ambitious and qualitative goals that align with core values.\nEach objective should be also time-bound\n\nWrite your objective\nKey Results\n\nHow can I measure the progress?\nHow can this outcome contribute to your mission?\n\nWrite your key results\nWhy?\n\nWhy this goal is important to you?\n"},"index":{"title":"Home","links":["Attachment/Templates/OKR-template"],"tags":[],"content":"This is my home\nEngineering Notes\n\n\n\nUseful template\n\nOKR template\n"}}